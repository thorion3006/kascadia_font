name: font_patcher

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - master
  schedule:
    - cron: "0 13 * * *"

jobs:
  check-for-new-cascadia:
    runs-on: ubuntu-20.04
    outputs:
      tag_name: ${{ env.CASCADIATAG }}
      tag_exists: ${{ steps.check_tag.outputs.exists }}

    steps:
    - name: Fetch latest release of Cascadia Code
      uses: octokit/request-action@v2.x
      id: get_latest_release
      with:
        route: GET /repos/{owner}/{repo}/releases/latest
        owner: microsoft
        repo: cascadia-code
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Get the latest Cascadia tag
      run: |
        echo "CASCADIATAG=${{ fromJson(steps.get_latest_release.outputs.data).tag_name }}" >> $GITHUB_ENV
        echo "Latest Cascadia tag is ${{ env.CASCADIATAG }}"
    - name: Check if tag exists
      uses: mukunku/tag-exists-action@v1.0.0
      id: check_tag
      with: 
        tag: ${{ env.CASCADIATAG }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-release:
    needs: check-for-new-cascadia
    if: ${{ github.event_name != 'schedule' || needs.check-for-new-cascadia.outputs.tag_exists != 'true' }}
    runs-on: ubuntu-18.04
    env:
      NERDFONTVERS: v2.1.0

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Install docker
      run: |
        sudo apt remove docker docker-engine docker.io;
        sudo apt install docker.io -y;
        sudo systemctl enable --now docker:
    - name: Download and patch fonts
      run: |
        chmod +x cascadia_patcher.sh
        ./cascadia_patcher.sh "${{ needs.check-for-new-cascadia.outputs.tag_name }}"
    
    # Release part
    - name: Create tag
      if: ${{ github.event_name != 'pull_request' && !startsWith(github.ref, 'refs/tags/') && needs.check-for-new-cascadia.outputs.tag_exists != 'true' }}
      uses: actions/github-script@v3
      with:
        github-token: ${{ github.token }}
        script: |
          const tagName = "${{ needs.check-for-new-cascadia.outputs.tag_name }}";
          const createdTag = await github.git.createTag({
            owner: context.repo.owner,
            repo: context.repo.repo,
            tag: tagName,
            message: `Bump Cascadia version to ${tagName}`,
            object: context.sha,
            type: "commit"
          })
          github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${tagName}`,
              sha: createdTag.data.sha
          })
    - name: Get tag name
      id: get_tag_name
      if: ${{ startsWith(github.ref, 'refs/tags/') }}
      uses: battila7/get-version-action@v2
    - name: Release
      uses: softprops/action-gh-release@v1
      if: ${{ github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/') || needs.check-for-new-cascadia.outputs.tag_exists != 'true') }}
      with:
        tag_name: ${{ startsWith(github.ref, 'refs/tags/') && steps.get_tag_name.outputs.version || needs.check-for-new-cascadia.outputs.tag_name }}
        files: |
          Kascadia*.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
    - name: Publish AUR package
      uses: KSXGitHub/github-actions-deploy-aur@V2.2.5
      with:
        pkgname: ttf-kascadia
        pkgbuild: ./PKGBUILD
        commit_username: ${{ secrets.AUR_USERNAME }}
        commit_email: ${{ secrets.AUR_EMAIL }}
        ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
        commit_message: Update AUR package
        ssh_keyscan_types: rsa,dsa,ecdsa,ed25519